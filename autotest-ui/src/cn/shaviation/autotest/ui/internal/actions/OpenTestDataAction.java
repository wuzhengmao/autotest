package cn.shaviation.autotest.ui.internal.actions;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.jdt.core.IJarEntryResource;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jface.action.Action;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.ide.IDE;

import cn.shaviation.autotest.core.jdt.NonJavaResourceFinder;
import cn.shaviation.autotest.ui.AutoTestUI;
import cn.shaviation.autotest.ui.internal.util.JarEntryEditorInput;
import cn.shaviation.autotest.ui.internal.util.UIUtils;

public class OpenTestDataAction extends Action {

	private Shell shell;
	private IJavaProject javaProject;
	private String testData;

	public OpenTestDataAction(Shell shell, IJavaProject javaProject,
			String testData) {
		super("&Go to File");
		this.shell = shell;
		this.javaProject = javaProject;
		this.testData = testData;
	}

	@Override
	public void run() {
		try {
			Object resource = NonJavaResourceFinder.lookup(javaProject,
					testData, null);
			if (resource instanceof IFile) {
				IDE.openEditor(PlatformUI.getWorkbench()
						.getActiveWorkbenchWindow().getActivePage(),
						(IFile) resource, AutoTestUI.TEST_DATA_EDITOR_ID, true);
			} else if (resource instanceof IJarEntryResource) {
				IDE.openEditor(PlatformUI.getWorkbench()
						.getActiveWorkbenchWindow().getActivePage(),
						new JarEntryEditorInput((IJarEntryResource) resource),
						AutoTestUI.TEST_DATA_EDITOR_ID, true);
			} else if (resource == null) {
				UIUtils.showError(
						shell,
						"Cannot Open Editor",
						"Test data \"" + testData
								+ "\" not found in project \""
								+ javaProject.getElementName() + "\"");
			} else {
				UIUtils.showError(shell, "Cannot Open Editor",
						"Uknown resource type: " + resource.getClass());
			}
		} catch (CoreException e) {
			UIUtils.showError(shell, "Cannot Open Editor", e.getMessage(), e);
		}
	}
}
